use bytemuck::{Pod, Zeroable};
use std::mem;

#[repr(C)]
#[derive(Debug, Copy, Clone, Default, PartialEq, Zeroable, Pod)]
pub struct RawColor {
    r: f32,
    g: f32,
    b: f32,
    a: f32,
}

#[repr(C)]
#[derive(Debug, Copy, Clone, Default, PartialEq)]
pub struct Color {
    red: f32,
    green: f32,
    blue: f32,
    alpha: f32,
}

macro_rules! color_constants {
    (
        $($name: ident ($r: expr, $g: expr, $b:expr))*
    ) => {
        #[allow(dead_code)]
        impl Color {
            $(
            pub const $name: Self = Self::srgb($r, $g, $b);
            )*
        }
    };
}

color_constants! {
    BLACK      (0  , 0  , 0  )
    WHITE      (255, 255, 255)
    DARK_GRAY  (64 , 64 , 64 )
    GRAY       (128, 128, 128)
    LIGHT_GRAY (192, 192, 192)

    RED        (255, 0  , 0  )
    YELLOW     (255, 255, 0  )
    GREEN      (0  , 255, 0  )
    CYAN       (0  , 255, 255)
    PURE_BLUE  (0  , 0  , 255)
    MAGENTA    (255, 0  , 255)

    ORANGE     (255, 128, 0  )
    BLUE       (0  , 128, 255)
}

impl Color {
    #[inline]
    pub const fn new(red: f32, green: f32, blue: f32, alpha: f32) -> Self {
        Self {
            red,
            green,
            blue,
            alpha,
        }
    }

    const fn srgb_lookup(c: u8) -> f32 {
        return LUT[c as usize];
        const LUT: [f32; 256] = [
            0.0000000000000000000,
            0.0003035269835488375,
            0.0006070539670976750,
            0.0009105809506465125,
            0.0012141079341953500,
            0.0015176349177441874,
            0.0018211619012930250,
            0.0021246888848418626,
            0.0024282158683907000,
            0.0027317428519395373,
            0.0030352698354883750,
            0.0033465357638991610,
            0.0036765073240474360,
            0.0040247170184963070,
            0.0043914420374102930,
            0.0047769534806937290,
            0.0051815167023383860,
            0.0056053916242027220,
            0.0060488330228570550,
            0.0065120907925944740,
            0.0069954101872653870,
            0.0074990320432261750,
            0.0080231929853849940,
            0.0085681256180693070,
            0.0091340587022207870,
            0.0097212173202378470,
            0.0103298230296269360,
            0.0109600940064882460,
            0.0116122451797438870,
            0.0122864883569158700,
            0.0129830323421730120,
            0.0137020830472896860,
            0.0144438435960925450,
            0.0152085144229127100,
            0.0159962933655096300,
            0.0168073757528873840,
            0.0176419544883840780,
            0.0185002201283796970,
            0.0193823609569357230,
            0.0202885630566524000,
            0.0212190103760035580,
            0.0221738847933873800,
            0.0231533661781104100,
            0.0241576324485047560,
            0.0251868596273616270,
            0.0262412218948498980,
            0.0273208916390748970,
            0.0284260395044207930,
            0.0295568344378088000,
            0.0307134437329936350,
            0.0318960330730115300,
            0.0331047665708850550,
            0.0343398068086821700,
            0.0356013148750203400,
            0.0368894504011000400,
            0.0382043715953465000,
            0.0395462352767328300,
            0.0409151969068531900,
            0.0423114106208096750,
            0.0437350292569734650,
            0.0451862043856755400,
            0.0466650863368801000,
            0.0481718242268894260,
            0.0497065659841272300,
            0.0512694583740432400,
            0.0528606470231802460,
            0.0544802764424423700,
            0.0561284900496000900,
            0.0578054301910672300,
            0.0595112381629812000,
            0.0612460542316176100,
            0.0630100176531676700,
            0.0648032666929057700,
            0.0666259386437728900,
            0.0684781698444001700,
            0.0703600956965958800,
            0.0722718506823174800,
            0.0742135683801496300,
            0.0761853814813078500,
            0.0781874218051863400,
            0.0802198203144683100,
            0.0822827071298148000,
            0.0843762115441488200,
            0.0865004620365497600,
            0.0886555862857729400,
            0.0908417111834076700,
            0.0930589628466874700,
            0.0953074666309647000,
            0.0975873471418624600,
            0.0998987282471138900,
            0.1022417330881013000,
            0.1046164840911041900,
            0.1070231029782676100,
            0.1094617107782993300,
            0.1119324278369056000,
            0.1144353738269737500,
            0.1169706677585108400,
            0.1195384279883456200,
            0.1221387722296018700,
            0.1247718175609504900,
            0.1274376804356474300,
            0.1301364766903643000,
            0.1328683215538179800,
            0.1356333296552056600,
            0.1384316150324518300,
            0.1412632911402716400,
            0.1441284708580577700,
            0.1470272664975949800,
            0.1499597898106085600,
            0.1529261519961501700,
            0.1559264637078274000,
            0.1589608350608804000,
            0.1620293756391110000,
            0.1651321945016676000,
            0.1682694001896907500,
            0.1714411007328226000,
            0.1746474036555850400,
            0.1778884159836291400,
            0.1811642442498602200,
            0.1844749945004410000,
            0.1878207723006778700,
            0.1912016827407914000,
            0.1946178304415758200,
            0.1980693195599488600,
            0.2015562537943970700,
            0.2050787363903169300,
            0.2086368701452557500,
            0.2122307574140552300,
            0.2158605001138992300,
            0.2195261997292692300,
            0.2232279573168085000,
            0.2269658735100983600,
            0.2307400485243491500,
            0.2345505821610052200,
            0.2383975738122710000,
            0.2422811224655548600,
            0.2462013267078354800,
            0.2501582847299534400,
            0.2541520943308267500,
            0.2581828529215958000,
            0.2622506575296962300,
            0.2663556048028624700,
            0.2704977910130658000,
            0.2746773120603846500,
            0.2788942634768104000,
            0.2831487404299921000,
            0.2874408377269175000,
            0.2917706498175358700,
            0.2961382707983211000,
            0.3005437944157765000,
            0.3049873140698863000,
            0.3094689228175085400,
            0.3139887133757175400,
            0.3185467781250918600,
            0.3231432091129507500,
            0.3277780980565422000,
            0.3324515363461793500,
            0.3371636150483303700,
            0.3419144249086610000,
            0.3467040563550296000,
            0.3515325995004393600,
            0.3564001441459435000,
            0.3613067797835095000,
            0.3662525955988395000,
            0.3712376804741491000,
            0.3762621229909064400,
            0.3813260114325301000,
            0.3864294337870490000,
            0.3915724777497232600,
            0.3967552307256268500,
            0.4019777798321957400,
            0.4072402119017367000,
            0.4125426134839037500,
            0.4178850708481375000,
            0.4232676699860717000,
            0.4286904966139067000,
            0.4341536361747489000,
            0.4396571738409188000,
            0.4452011945162278600,
            0.4507857828382234600,
            0.4564110231804046600,
            0.4620769996544071000,
            0.4677837961121590000,
            0.4735314961480095500,
            0.4793201831008268000,
            0.4851499400560704000,
            0.4910208498478356000,
            0.4969329950608704000,
            0.5028864580325687000,
            0.5088813208549338000,
            0.5149176653765214000,
            0.5209955732043543000,
            0.5271151257058131000,
            0.5332764040105052000,
            0.5394794890121071000,
            0.5457244613701866000,
            0.5520114015120001000,
            0.5583403896342679000,
            0.5647115057049292000,
            0.5711248294648731000,
            0.5775804404296506000,
            0.5840784178911641000,
            0.5906188409193369000,
            0.5972017883637634000,
            0.6038273388553378000,
            0.6104955708078648000,
            0.6172065624196511000,
            0.6239603916750761000,
            0.6307571363461468000,
            0.6375968739940326000,
            0.6444796819705821000,
            0.6514056374198242000,
            0.6583748172794486000,
            0.6653872982822720000,
            0.6724431569576875000,
            0.6795424696330938000,
            0.6866853124353135000,
            0.6938717612919899000,
            0.7011018919329731000,
            0.7083757798916868000,
            0.7156935005064807000,
            0.7230551289219693000,
            0.7304607400903536000,
            0.7379104087727308000,
            0.7454042095403874000,
            0.7529422167760779000,
            0.7605245046752924000,
            0.7681511472475071000,
            0.7758222183174236000,
            0.7835377915261935000,
            0.7912979403326302000,
            0.7991027380144090000,
            0.8069522576692516000,
            0.8148465722161012000,
            0.8227857543962835000,
            0.8307698767746546000,
            0.8387990117407400000,
            0.8468732315098580000,
            0.8549926081242338000,
            0.8631572134541023000,
            0.8713671191987973000,
            0.8796223968878317000,
            0.8879231178819663000,
            0.8962693533742664000,
            0.9046611743911496000,
            0.9130986517934192000,
            0.9215818562772946000,
            0.9301108583754237000,
            0.9386857284578880000,
            0.9473065367331999000,
            0.9559733532492861000,
            0.9646862478944651000,
            0.9734452903984125000,
            0.9822505503331171000,
            0.9911020971138298000,
            1.0000000000000000000,
        ];
    }

    pub const fn srgb(r: u8, g: u8, b: u8) -> Self {
        Self::rgb(
            Self::srgb_lookup(r),
            Self::srgb_lookup(g),
            Self::srgb_lookup(b),
        )
    }

    #[inline]
    pub const fn with_alpha(self, alpha: f32) -> Self {
        Self::new(self.red, self.green, self.blue, alpha)
    }

    #[inline]
    pub const fn rgb(r: f32, g: f32, b: f32) -> Self {
        Self::new(r, g, b, 1.0)
    }

    #[inline]
    pub const fn raw(self) -> RawColor {
        unsafe { mem::transmute(self) }
    }

    #[inline]
    pub fn raw_pre_mult(self) -> RawColor {
        Self::new(
            self.red * self.alpha,
            self.green * self.alpha,
            self.blue * self.alpha,
            self.alpha,
        )
        .raw()
    }
}
